# Generated by Django 4.2.2 on 2023-08-17 07:53

import aiupages.models
import aiupages.validators
import ckeditor.fields
import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Blocks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(default='contactblock-', max_length=255, verbose_name='Код отображения')),
                ('title', models.CharField(blank=True, default='', help_text='Роль подзаголовка, можно не указывать, если он не нужен к отображению', max_length=255, verbose_name='Код отображения')),
                ('order', models.IntegerField(default=0, help_text='Чем меньше число, тем выше приоритет, как порядковый номер', verbose_name='Приоритет')),
            ],
            options={
                'verbose_name': 'Блок данных (строка разметки)',
                'verbose_name_plural': 'Блок данных (строка разметки)',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='DiagrBlock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, default='', help_text='Строка, название диаграммы/структуры', max_length=255, verbose_name='Строка')),
                ('blockid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='diagr_num', to='aiupages.blocks')),
            ],
            options={
                'verbose_name': 'Диграмма для структуры',
                'verbose_name_plural': 'Диграмма для структуры',
            },
        ),
        migrations.CreateModel(
            name='DiagrColumn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(default='', editable=False, max_length=255)),
                ('title', models.CharField(default='', help_text='Отображаемое название', max_length=255, verbose_name='Колонка')),
                ('order', models.IntegerField(default=0, help_text='Чем меньше число, тем выше приоритет, как порядковый номер', verbose_name='Приоритет')),
            ],
            options={
                'verbose_name': 'Колонка сетки',
                'verbose_name_plural': 'Колонка сетки',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='ModernBlock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('blockid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modern_num', to='aiupages.blocks')),
            ],
            options={
                'verbose_name': 'Блок плиток',
                'verbose_name_plural': 'Блок плиток',
            },
        ),
        migrations.CreateModel(
            name='Pages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(default='', help_text='Фигурирует в URL, как id для ссылки на страницу', max_length=255, verbose_name='Slug')),
                ('title', models.CharField(default='', help_text='Заголовок, отображаемый в меню, блоках и прочее', max_length=255, verbose_name='Краткий заголовок')),
                ('description', models.CharField(default='', help_text='Описание подробное страницы, обычно используется в поисковых системах, как параметр description', max_length=255, verbose_name='Описание')),
                ('public_name', models.CharField(default='', help_text='Заголовок в шапке страницы', max_length=255, verbose_name='Отображаемый заголовок')),
                ('date_pub', models.DateField(default=datetime.date.today, editable=False, help_text='Заголовок в шапке страницы', verbose_name='Отображаемый заголовок')),
                ('fullmenu', models.BooleanField(default=False, help_text='Отображать на десктопах постоянно открытое меню сайта', verbose_name='Раскрытое меню на странице')),
            ],
            options={
                'verbose_name': 'Страницы сайта',
                'verbose_name_plural': 'Страницы сайта',
                'ordering': ['-date_pub'],
            },
        ),
        migrations.CreateModel(
            name='TagsMenu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titlemenu', models.CharField(blank=True, default='', help_text='Название критерия файла по которому идёт выборка', max_length=255, verbose_name='Название критерия файла')),
                ('order', models.IntegerField(default=0, help_text='Чем меньше число, тем выше приоритет, как порядковый номер', verbose_name='Приоритет')),
                ('sidebar', models.BooleanField(default=False, help_text='Отображение фальтра категорий боковым меню', verbose_name='Отображение боковым меню')),
                ('slug', models.CharField(default='', editable=False, max_length=255)),
            ],
            options={
                'verbose_name': 'Меню тегов',
                'verbose_name_plural': 'Меню тегов',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='TextBlock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contenthtml', ckeditor.fields.RichTextField(default='')),
                ('blockid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='textblock_num', to='aiupages.blocks')),
            ],
            options={
                'verbose_name': 'Текст блок',
                'verbose_name_plural': 'Текст блок',
            },
        ),
        migrations.CreateModel(
            name='TagsItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(default=0, help_text='Чем меньше число, тем выше приоритет, как порядковый номер', verbose_name='Приоритет отображения')),
                ('slug', models.CharField(default='', editable=False, max_length=255)),
                ('titleitem', models.CharField(blank=True, default='', help_text='Вариант выборки', max_length=80, verbose_name='Название элемента выборки')),
                ('tagsmenuid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagsmenu_url', to='aiupages.tagsmenu')),
            ],
            options={
                'verbose_name': 'Тег',
                'verbose_name_plural': 'Тег',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='ModernItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(default=0, help_text='Чем меньше число, тем выше приоритет, как порядковый номер', verbose_name='Приоритет')),
                ('title', models.CharField(default='#.', max_length=120, verbose_name='Заголовок')),
                ('link_url', models.CharField(default='#.', max_length=100, verbose_name='Ссылка')),
                ('background', models.ImageField(blank=True, upload_to='%d-%m-%Y/')),
                ('modern', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modernitem_num', to='aiupages.modernblock')),
            ],
            options={
                'verbose_name': 'Элемент плиток',
                'verbose_name_plural': 'Элемент плиток',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='FilesUpload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filesUrl', models.FileField(upload_to=aiupages.models.user_directory_path, validators=[aiupages.validators.validate_file_extension], verbose_name='Файл на сервере')),
                ('filetype', models.CharField(default='', editable=False, help_text='Название файла отображаемое в таблице', max_length=255, verbose_name='Тип файла')),
                ('title', models.CharField(default='', help_text='Название файла отображаемое в таблице', max_length=255, verbose_name='Название файла')),
                ('date_pub', models.DateTimeField(help_text='Установка дата публикации в таблице', verbose_name='Дата публикации')),
                ('pageid', models.ManyToManyField(blank=True, null=True, related_name='page_pub_file', to='aiupages.pages')),
                ('tagsid', models.ManyToManyField(blank=True, null=True, related_name='tagsitem_url', to='aiupages.tagsitem')),
            ],
            options={
                'verbose_name': 'Файлы и документы',
                'verbose_name_plural': 'Файлы и документы',
                'ordering': ['-date_pub'],
            },
        ),
        migrations.CreateModel(
            name='ExtendedFiles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, default='', help_text='Заголовок раздела для поиска', max_length=255, verbose_name='Заголовок (если необходим)')),
                ('tableview', models.BooleanField(default=False, help_text='Отображение шапки, подписей и т.д.', verbose_name='Табличный вид')),
                ('date', models.BooleanField(default=False, help_text='(Не работает без табличного вида) Отображает колонку дату публикации', verbose_name='Отображение даты публикации в таблице')),
                ('blockid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blockview', to='aiupages.blocks')),
                ('tagmenu', models.ManyToManyField(related_name='files_id', to='aiupages.tagsmenu')),
            ],
            options={
                'verbose_name': 'Блок файловых элементов',
                'verbose_name_plural': 'Блок файловых элементов',
            },
        ),
        migrations.CreateModel(
            name='DiagrRow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, default='', help_text='Строка, название', max_length=255, verbose_name='Строка')),
                ('order', models.IntegerField(default=0, help_text='Чем меньше число, тем выше приоритет, как порядковый номер', verbose_name='Приоритет')),
                ('tableid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='drow_num', to='aiupages.diagrblock')),
            ],
            options={
                'verbose_name': 'Строка сетки',
                'verbose_name_plural': 'Строка сетки',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='DiagrElement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, default='', help_text='Название элемента', max_length=255, verbose_name='Подотдел')),
                ('fio', models.CharField(blank=True, default='', help_text='Фамилия Имя Отчество', max_length=255, verbose_name='ФИО')),
                ('tel', models.CharField(blank=True, default='', help_text='Телефон', max_length=255, verbose_name='Телефон')),
                ('order', models.IntegerField(default=0, help_text='Чем меньше число, тем выше приоритет, как порядковый номер', verbose_name='Приоритет')),
                ('colid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='delem_num', to='aiupages.diagrcolumn')),
            ],
            options={
                'verbose_name': 'Раскрывающийся элемент',
                'verbose_name_plural': 'Раскрывающийся элемент',
                'ordering': ['order'],
            },
        ),
        migrations.AddField(
            model_name='diagrcolumn',
            name='rowid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dcol_num', to='aiupages.diagrrow'),
        ),
        migrations.CreateModel(
            name='Containers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(default='container-', help_text='Код отображения', max_length=255, verbose_name='Slug контейнера')),
                ('title', models.CharField(blank=True, default='', help_text='Роль подзаголовка, можно не указывать, если он не нужен к отображению', max_length=255, verbose_name='Отображаемый заголовок')),
                ('template_name', models.CharField(default='container.html', help_text='Название файла для шаблона контейнера, системная настройка, лучше оставлять по умолчанию', max_length=255, verbose_name='Файл шаблона')),
                ('order', models.IntegerField(default=0, help_text='Чем меньше число, тем выше приоритет, как порядковый номер', verbose_name='Приоритет')),
                ('page_member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='container_num', to='aiupages.pages')),
            ],
            options={
                'verbose_name': 'Контейнер содержимого',
                'verbose_name_plural': 'Контейнер содержимого',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='ContactBlock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('col01html', models.TextField(default='')),
                ('post_addr', models.TextField(default='')),
                ('seo_pr', models.TextField(default='')),
                ('tel', models.CharField(default='', max_length=255)),
                ('fax', models.CharField(default='', max_length=255)),
                ('email', models.CharField(default='', max_length=255)),
                ('blockid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contact_num', to='aiupages.blocks')),
            ],
            options={
                'verbose_name': 'Контакты блок',
                'verbose_name_plural': 'Контакты блок',
            },
        ),
        migrations.AddField(
            model_name='blocks',
            name='contid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='block_num', to='aiupages.containers'),
        ),
    ]
